{"version":3,"sources":["util/Util.js","util/URLS.js","component/BaseComponent.js","layout/Header.js","layout/Footer.js","component/ModalComponent.js","component/Config.js","component/Command.js","component/FixTask.js","component/BreakTask.js","component/FileSystem.js","component/Sql.js","layout/Main.js","layout/Login.js","App.js","serviceWorker.js","index.js"],"names":["ajax","opt","option","$","extend","type","contentType","dataType","xhrFields","withCredentials","crossDomain","isPlainObject","data","JSON","stringify","COLORS","primary","secondary","success","danger","warning","info","light","dark","all","submitForm","action","method","form","each","key","hasOwnProperty","input","val","attr","append","submit","setTimeout","remove","urls","LOGIN","LOGOUT","SCHEDULE_ON","SCHEDULE_OFF","STATE_ON_OFF","CONFIG_LIST","CONFIG_SAVE","COMMAND_RUN","SQL_RUN","TASK_LIST","TASK_LIST_FIX","TASK_SAVE","TASK_DELETE","TASK_UPLOAD","TASK_UPLOAD_FIX","FILE_SYSTEM","FILE_SYSTEM_DOWNLOAD","FILE_SYSTEM_UPLOAD","FILE_SYSTEM_RENAME","FILE_SYSTEM_DELETE","FILE_SYSTEM_RECOVERY","FILE_SYSTEM_CREATE","try","me","baseUrl","window","location","hostname","k","v","retry","replace","RegExp","URLS","BaseComponent","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","subFix","header","alert","color","msg","onOff","setSelf","assertThisInitialized","setSomeState","obj","s","state","setState","afterAction","init","inherits","createClass","value","React","Component","Header","_BaseComponent","inArray","on","optionName","url","isRunning","off","logout","login","user","_this2","react_default","a","createElement","className","reactstrap_es","size","onClick","Footer","footer","Date","getFullYear","ModalComponent","toggle","modal","Config","getList","isArray","list","striped","getListFunc","alertFunc","map","item","id","scope","name","code","Config_ConfigModal","ConfigModal","_this3","ret","isOpen","for","placeholder","defaultValue","onChange","Command","run","cmdIdx","cmd","command","result","message","style","marginTop","textAlign","FixTask","FixTask_TaskModal","idx","img","video","act","actend","cost","seq","TaskModal","taskId","task","target","o","groups","uploadFix","file","formData","FormData","files","cache","processData","_this4","BreakTask","BreakTask_TaskModal","start","uploadBreak","FileSystem","root","path","fileInfo","breadcrumb","concat","parents","sort","b","directory","setFileInfo","parent","pop","doDownLoad","setFileInfoFunc","length","href","active","title","some","fInfo","FileSystem_CreateModal","FileSystem_UploadModal","downloadFunc","fi","cursor","fontWeight","FileSystem_RecoveryModal","FileSystem_RenameModal","FileSystem_DeleteModal","CreateModal","nm","UploadModal","RenameModal","_this5","split","DeleteModal","_this6","RecoveryModal","_this7","Sql","sqlIdx","sql","dt","getTime","th","push","toUpperCase","td","Main","sub","config","fixTask","breakTask","fixVideo","setSub","subObj","tab","activeTab","main","tabs","classnames","tabId","Config_Config","FixTask_FixTask","BreakTask_BreakTask","FileSystem_FileSystem","Sql_Sql","Command_Command","Login","userid","pass","status","width","marginLeft","hidden","App","initAjaxErrorHandler","document","ajaxError","event","xhr","err","str","error","Header_Header","Main_Main","Login_Login","Footer_Footer","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9be8456.chunk.js","sourcesContent":["import $ from \"jquery\";\r\n\r\nexport function ajax(opt) {\r\n    const option = $.extend({\r\n        type: \"post\",\r\n        contentType: \"application/json;charset=utf-8\",\r\n        dataType: \"json\",\r\n        xhrFields: {\r\n            withCredentials: true\r\n        },\r\n        crossDomain: true\r\n    }, opt);\r\n    if ($.isPlainObject(opt.data)) {\r\n        option.data = JSON.stringify(opt.data);\r\n    }\r\n    $.ajax(option);\r\n}\r\n\r\nexport function printObject (a, nm, subIdx) {\r\n    let ret = true;\r\n    subIdx = subIdx || 0;\r\n    let subStr = \"\";\r\n    let space = \"\";\r\n    for (var k = 0; k < subIdx; k++) {\r\n        space += \"    \";\r\n    }\r\n    if (nm) subStr = subStr + space + nm + \": \";\r\n    if (a == null && a == undefined) {\r\n        subStr += \"null,\\n\";\r\n        ret = false;\r\n    }\r\n    if (ret) {\r\n        if ($.isArray(a)) {\r\n            subStr += \"[\\n\";\r\n            a.forEach(function (x, i){\r\n                subStr += printObject(x, null, subIdx + 1) + \"\";\r\n            });\r\n            subStr += space + \"],\\n\";\r\n        } else if ($.isFunction(a)) {\r\n            subStr += \"[Function],\\n\";\r\n        } else if ($.isPlainObject(a)) {\r\n            subStr += space + \"{\\n\";\r\n            for (let o in a) {\r\n                if (a.hasOwnProperty(o)) {\r\n                    subStr += printObject(a[o], o, subIdx + 1);\r\n                }\r\n            }\r\n            subStr += space + \"},\\n\";\r\n        } else {\r\n            subStr += a + \",\\n\";\r\n        }\r\n    }\r\n    return subStr;\r\n}\r\n\r\nexport const COLORS = {\r\n    primary: \"primary\",\r\n    secondary: \"secondary\",\r\n    success: \"success\",\r\n    danger: \"danger\",\r\n    warning: \"warning\",\r\n    info: \"info\",\r\n    light: \"light\",\r\n    dark: \"primary\",\r\n    all: [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"]\r\n};\r\n\r\nexport const submitForm = (action, method, data) => {\r\n    const form = $(\"<form>\");\r\n    if ($.isPlainObject(data)) {\r\n        $.each(data, key => {\r\n            if (data.hasOwnProperty(key)) {\r\n                const input = $(\"<input>\");\r\n                input.val(data[key]);\r\n                input.attr(\"name\", key);\r\n                input.attr(\"type\", 'hidden');\r\n                form.append(input);\r\n            }\r\n        });\r\n    }\r\n    form.attr(\"action\", action);\r\n    form.attr(\"method\", method || \"get\");\r\n    form.attr(\"target\", '_blank');\r\n    $(\"body\").append(form);\r\n    form.submit();\r\n    setTimeout(() => {\r\n        form.remove();\r\n    }, 100);\r\n};","import $ from \"jquery\";\r\n\r\nconst urls = {\r\n    LOGIN: \"/login\",\r\n    LOGOUT: \"/logout\",\r\n    SCHEDULE_ON: \"/schedule/on\",\r\n    SCHEDULE_OFF: \"/schedule/off\",\r\n    STATE_ON_OFF: \"/schedule/onoff\",\r\n    CONFIG_LIST: \"/config/list\",\r\n    CONFIG_SAVE: \"/config/save\",\r\n    COMMAND_RUN: \"/command/run\",\r\n    SQL_RUN: \"/sql\",\r\n    TASK_LIST: \"/task/list\",\r\n    TASK_LIST_FIX: \"/task/list/fix\",\r\n    TASK_SAVE: \"/task/save\",\r\n    TASK_DELETE: \"/task/delete\",\r\n    TASK_UPLOAD: \"/task/upload\",\r\n    TASK_UPLOAD_FIX: \"/task/upload/fix\",\r\n    FILE_SYSTEM: \"/fs/list\",\r\n    FILE_SYSTEM_DOWNLOAD: \"/fs/download\",\r\n    FILE_SYSTEM_UPLOAD: \"/fs/upload\",\r\n    FILE_SYSTEM_RENAME: \"/fs/rename\",\r\n    FILE_SYSTEM_DELETE: \"/fs/delete\",\r\n    FILE_SYSTEM_RECOVERY: \"/fs/recovery\",\r\n    FILE_SYSTEM_CREATE: \"/fs/create\",\r\n    /**\r\n     * 外网地址是80端口\r\n     */\r\n    try: () => {\r\n        const me = urls;\r\n        const baseUrl = \"http://\" + window.location.hostname + \":80\";\r\n        $.each(me, (k, v) => {\r\n            if (k != \"try\" && k != \"retry\") {\r\n                me[k] = baseUrl + v;\r\n            }\r\n        });\r\n        //console.table($.extend({}, me));\r\n    },\r\n    /**\r\n     * 内网地址是9797端口\r\n     */\r\n    retry: () => {\r\n        const me = urls;\r\n        $.each(me, (k, v) => {\r\n            if (k != \"try\" && k != \"retry\") {\r\n                me[k] = v.replace(new RegExp(/(:)80/g), \":9797\");\r\n            }\r\n        });\r\n        //console.table($.extend({}, me));\r\n    }\r\n};\r\n\r\nexport const URLS = urls;\r\n","import React from \"react\";\r\nimport $ from \"jquery\"\r\n\r\nexport class BaseComponent extends React.Component {\r\n    subFix = {\r\n        header: \"header\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    alert = (color, msg, onOff) => {\r\n        if (this.props.alert) {\r\n            this.props.alert(color, msg, onOff);\r\n        }\r\n    };\r\n\r\n    setSelf = (key) => {\r\n        if (this.props.setSelf) {\r\n            this.props.setSelf(key, this);\r\n        }\r\n    };\r\n\r\n    setSomeState = (obj) => {\r\n        const s = $.extend({}, this.state, obj);\r\n        this.setState(s);\r\n    };\r\n\r\n    afterAction = () => {\r\n        if (this.props.afterAction) {\r\n            this.props.afterAction();\r\n        }\r\n    };\r\n\r\n    action = () => {};\r\n\r\n    init = () => {};\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n}","import React from 'react';\r\nimport {Alert, Button, ButtonGroup} from \"reactstrap\";\r\nimport {ajax, COLORS} from \"../util/Util\";\r\nimport {URLS} from \"../util/URLS\";\r\nimport {BaseComponent} from \"../component/BaseComponent\";\r\nimport $ from \"jquery\";\r\n\r\nexport class Header extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: null,\r\n            color: null,\r\n            isRunning: true,\r\n            login: false,\r\n            user: null\r\n        };\r\n        this.setSelf(this.subFix.header);\r\n    }\r\n\r\n    alert = (color, msg) => {\r\n        if (!$.inArray(color, COLORS.all)) {\r\n            color = COLORS.info;\r\n        }\r\n        this.setSomeState({\r\n            msg: msg,\r\n            color: color\r\n        });\r\n        window.setTimeout(() => this.setSomeState({\r\n            msg: null,\r\n            color: COLORS.light\r\n        }), 2000);\r\n    };\r\n\r\n    on = () => ajax({\r\n        optionName: \"启动播放\",\r\n        url: URLS.SCHEDULE_ON,\r\n        success: (data) => {\r\n            if (data == 1) {\r\n                this.setSomeState({\r\n                    isRunning: true\r\n                });\r\n                this.alert(COLORS.success, \"启动播放成功\");\r\n            } else {\r\n                this.setSomeState({\r\n                    isRunning: false\r\n                });\r\n                this.alert(COLORS.danger, \"启动播放失败\");\r\n            }\r\n        }\r\n    });\r\n\r\n    off = () => ajax({\r\n        optionName: \"停止播放\",\r\n        url: URLS.SCHEDULE_OFF,\r\n        success: (data) => {\r\n            if (data == 1) {\r\n                this.setSomeState({\r\n                    isRunning: false\r\n                });\r\n                this.alert(COLORS.success, \"停止播放成功\");\r\n            } else {\r\n                this.setSomeState({\r\n                    isRunning: true\r\n                });\r\n                this.alert(COLORS.danger, \"停止播放失败\");\r\n            }\r\n        }\r\n    });\r\n\r\n    init = () => {\r\n        ajax({\r\n            optionName: \"获取服务状态\",\r\n            url: URLS.STATE_ON_OFF,\r\n            success: (data) => {\r\n                this.setSomeState({\r\n                    isRunning: data == 1\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    logout = () => ajax({\r\n        optionName: \"退出\",\r\n        url: URLS.LOGOUT,\r\n        success: (data) => {\r\n            if (data == 1) {\r\n                this.props.logout();\r\n            } else {\r\n                this.alert(COLORS.danger, \"退出失败\");\r\n            }\r\n        }\r\n    });\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Header\">\r\n                <div className=\"Header-left\">\r\n                </div>\r\n                <div className=\"Header-center\">\r\n                    {\r\n                        (() => {\r\n                            if (this.state.msg && this.state.msg != \"\") {\r\n                                return (\r\n                                    <Alert color={this.state.color || \"success\"} size=\"sm\">\r\n                                        {this.state.msg}\r\n                                    </Alert>\r\n                                );\r\n                            }\r\n                        })()\r\n                    }\r\n                </div>\r\n                {\r\n                    (() => {\r\n                        if (this.state.login) {\r\n                            return (\r\n                                <div className=\"Header-right\">\r\n                                    {this.state.user}\r\n                                    &nbsp;&nbsp;\r\n                                    {\r\n                                        (() => {\r\n                                            if (this.state.isRunning) {\r\n                                                return (\r\n                                                    <ButtonGroup>\r\n                                                        <Button color={COLORS.success} size=\"sm\">大屏播放已启动</Button>\r\n                                                        <Button color={COLORS.danger} size=\"sm\"\r\n                                                                onClick={() => this.off()}>停止</Button>\r\n                                                    </ButtonGroup>\r\n                                                );\r\n                                            } else {\r\n                                                return (\r\n                                                    <ButtonGroup>\r\n                                                        <Button color={COLORS.danger} size=\"sm\">大屏播放已停止</Button>\r\n                                                        <Button color={COLORS.success} size=\"sm\"\r\n                                                                onClick={() => this.on()}>启动</Button>\r\n                                                    </ButtonGroup>\r\n                                                );\r\n                                            }\r\n                                        })()\r\n                                    }\r\n                                    &nbsp;&nbsp;\r\n                                    <Button color=\"primary\" size=\"sm\" onClick={() => this.logout()}>退出</Button>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {BaseComponent} from \"../component/BaseComponent\";\r\n\r\nexport class Footer extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setSelf(this.subFix.footer, this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Footer\">\r\n                <h6>\r\n                    &copy;我爱我家-技术中心 &nbsp;2000&nbsp;-&nbsp;{new Date().getFullYear()}\r\n                </h6>\r\n                <span className=\"Footer-right\">huangheliang@5i5j.com</span>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BaseComponent} from \"./BaseComponent\";\r\n\r\nexport class ModalComponent extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false\r\n        };\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setSomeState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n}","import React from \"react\";\r\nimport {BaseComponent} from \"./BaseComponent\";\r\nimport {Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport $ from \"jquery\";\r\nimport {ajax, COLORS} from \"../util/Util\";\r\nimport {URLS} from \"../util/URLS\";\r\nimport {ModalComponent} from \"./ModalComponent\";\r\n\r\nexport class Config extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: null\r\n        };\r\n    }\r\n\r\n    getList = () => {\r\n        ajax({\r\n            optionName: \"获取配置列表\",\r\n            url: URLS.CONFIG_LIST,\r\n            success: (data) => {\r\n                if ($.isArray(data)) {\r\n                    this.setSomeState({list: data});\r\n                } else {\r\n                    this.setSomeState({list: []});\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    init = () => {\r\n        this.getList();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Table dark striped>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>配置项</th>\r\n                    <th>编码</th>\r\n                    <th>配置值</th>\r\n                    <th>操作</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    (() => {\r\n                        const getListFunc = this.getList;\r\n                        const alertFunc = this.alert;\r\n                        if ($.isArray(this.state.list)) {\r\n                            return this.state.list.map(function (item) {\r\n                                return (\r\n                                    <tr key={item.id}>\r\n                                        <th scope=\"row\">{item.id}</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.code}</td>\r\n                                        <td>{item.value}</td>\r\n                                        <td>\r\n                                            <ConfigModal data={item} alert={alertFunc} afterAction={getListFunc}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            });\r\n                        }\r\n                    })()\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nclass ConfigModal extends ModalComponent {\r\n    action = () => {\r\n        const value = $(\"#value\").val();\r\n        if (value || value == 0) {\r\n            ajax({\r\n                optionName: \"保存配置\",\r\n                url: URLS.CONFIG_SAVE,\r\n                data: {\r\n                    id: this.props.data.id,\r\n                    value: value\r\n                },\r\n                success: (ret) => {\r\n                    if (ret == 1) {\r\n                        this.toggle();\r\n                        this.afterAction();\r\n                        this.alert(COLORS.success, \"保存成功\");\r\n                    } else {\r\n                        this.alert(COLORS.danger, \"保存失败\");\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            this.alert(COLORS.danger, \"请输入配置值\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button color={COLORS.info} size=\"sm\" onClick={this.toggle}>编辑</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} color={COLORS.dark}>\r\n                    <ModalHeader toggle={this.toggle}>{this.props.data.name}</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label for=\"value\">配置值</Label>\r\n                                <Input type=\"text\" name=\"value\" id=\"value\" placeholder=\"配置值\" defaultValue={this.props.data.value} onChange={() => {}}/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.action}>保存</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BaseComponent} from \"./BaseComponent\";\r\nimport {Button, Col, Container, Input, Row} from \"reactstrap\";\r\nimport {ajax, COLORS} from \"../util/Util\";\r\nimport $ from \"jquery\";\r\nimport {URLS} from \"../util/URLS\";\r\n\r\nexport class Command extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            result: null\r\n        };\r\n    }\r\n\r\n    run = (cmdIdx) => {\r\n        const cmd = [\r\n            'cmd /c dir log',\r\n            'find /N /I \"-\" log/startServer_yyyyMMdd_HHmmss.log',\r\n            'find /N /I \"Tunnel established at \" log/natapp.log'\r\n        ];\r\n        if (cmd[cmdIdx]) {\r\n            $(\"#command\").val(cmd[cmdIdx]);\r\n        } else {\r\n            ajax({\r\n                optionName: \"执行cmd命令\",\r\n                url: URLS.COMMAND_RUN,\r\n                data: {\r\n                    command: $(\"#command\").val()\r\n                },\r\n                success: (result) => {\r\n                    this.alert(COLORS.success, \"执行完成\");\r\n                    if (result) {\r\n                        this.setSomeState({result: result.message})\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{marginTop: \"10px\"}}>\r\n                <Row>\r\n                    <Col style={{textAlign: \"center\"}}>\r\n                        <Input type=\"text\" id=\"command\" placeholder=\"请输入cmd命令\"/>\r\n                        <Button color={COLORS.secondary} size=\"sm\" onClick={() => this.run(0)}>日志列表</Button>{'  '}\r\n                        <Button color={COLORS.info} size=\"sm\" onClick={() => this.run(1)}>查看日志</Button>{'  '}\r\n                        <Button color={COLORS.warning} size=\"sm\" onClick={() => this.run(2)}>外网地址</Button>{'  '}\r\n                        <Button color={COLORS.primary} size=\"sm\" onClick={() => this.run()}>执行命令</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col id=\"commandResult\">\r\n                        <pre style={{color: \"#FFFFFF\"}}>\r\n                        {this.state.result}\r\n                        </pre>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BaseComponent} from \"./BaseComponent\";\r\nimport {ajax, COLORS} from \"../util/Util\";\r\nimport {URLS} from \"../util/URLS\";\r\nimport $ from \"jquery\";\r\nimport {Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport {ModalComponent} from \"./ModalComponent\";\r\n\r\nexport class FixTask extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: null\r\n        };\r\n    }\r\n\r\n    getList = () => {\r\n        ajax({\r\n            optionName: \"获取固播任务列表\",\r\n            url: URLS.TASK_LIST_FIX,\r\n            success: (data) => {\r\n                if ($.isArray(data)) {\r\n                    this.setSomeState({list: data});\r\n                } else {\r\n                    this.setSomeState({list: []});\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    init = () => {\r\n        this.getList();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table dark striped>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>名称</th>\r\n                        <th>播放类型</th>\r\n                        <th>开始日期</th>\r\n                        <th>结束日期</th>\r\n                        <th>播放时长</th>\r\n                        <th>播放顺序</th>\r\n                        <th>\r\n                            <TaskModal data={{}} alert={this.alert} afterAction={this.getList}/>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        (() => {\r\n                            const getListFunc = this.getList;\r\n                            const alertFunc = this.alert;\r\n                            if ($.isArray(this.state.list)) {\r\n                                return this.state.list.map(function (item, idx) {\r\n                                    const typeName = {\r\n                                        url: \"网址\",\r\n                                        img: \"图片\",\r\n                                        video: \"视频\"\r\n                                    };\r\n                                    return (\r\n                                        <tr key={item.id}>\r\n                                            <th scope=\"row\">{item.id}</th>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{typeName[item.type]}</td>\r\n                                            <td>{item.act}</td>\r\n                                            <td>{item.actend}</td>\r\n                                            <td>{item.cost}</td>\r\n                                            <td>{item.seq}</td>\r\n                                            <td>\r\n                                                <TaskModal data={item} alert={alertFunc} afterAction={getListFunc}/>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                });\r\n                            }\r\n                        })()\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass TaskModal extends ModalComponent {\r\n    action = () => {\r\n        const taskId = this.props.data.id;\r\n        let task = {\r\n            name: null,\r\n            type: null,\r\n            target: null,\r\n            act: null,\r\n            actend: null,\r\n            cost: null,\r\n            seq: null\r\n        };\r\n        for(let o in task) {\r\n            if (task.hasOwnProperty(o)) {\r\n                task[o] = $(\"#taskForm\" + taskId + \" [name='\" + o + \"']\").val();\r\n            }\r\n        }\r\n        $.extend(task, {\r\n            id: taskId || null,\r\n            groups: \"FIX\"\r\n        });\r\n        ajax({\r\n            optionName: \"保存固播任务\",\r\n            url: URLS.TASK_SAVE,\r\n            data: task,\r\n            success: (ret) => {\r\n                if (ret == 1) {\r\n                    this.alert(COLORS.success, \"保存成功\");\r\n                    this.toggle();\r\n                    this.afterAction();\r\n                } else {\r\n                    this.alert(COLORS.danger, \"保存失败\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    uploadFix = () => {\r\n        const taskId = this.props.data.id;\r\n        const file = $(\"#taskForm\" + taskId + \" input[type='file']\");\r\n        if (file.val() && file.val() != \"\") {\r\n            const formData = new FormData();\r\n            formData.append('file', file[0].files[0]);\r\n            ajax({\r\n                optionName: \"上传播放文件\",\r\n                url: URLS.TASK_UPLOAD_FIX,\r\n                cache: false,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                dataType: \"text\",\r\n                success: (data) => {\r\n                    $(\"#taskForm\" + taskId + \" input[name='target']\").val(data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const getBtn = () => {\r\n            if (this.props.data.id) {\r\n                return <Button color={COLORS.info} size=\"sm\" onClick={this.toggle}>编辑</Button>;\r\n            } else {\r\n                return <Button color={COLORS.primary} size=\"sm\" onClick={this.toggle}>新增</Button>;\r\n            }\r\n        };\r\n        return (\r\n            <div>\r\n                {getBtn()}\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>固播任务</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form id={\"taskForm\" + this.props.data.id}>\r\n                            <FormGroup>\r\n                                <Label for=\"name\">任务名称</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"任务名称\"\r\n                                       defaultValue={this.props.data.name} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"type\">播放类型</Label>\r\n                                <Input type=\"select\" name=\"type\" id=\"type\" placeholder=\"播放类型\"\r\n                                       defaultValue={this.props.data.type} onChange={() => {\r\n                                }}>\r\n                                    <option value=\"url\">网址</option>\r\n                                    <option value=\"img\">图片</option>\r\n                                    <option value=\"video\">视频</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"target\">播放目标</Label>\r\n                                <Input type=\"text\" name=\"target\" id=\"target\" placeholder=\"播放目标\"\r\n                                       defaultValue={this.props.data.target} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"file\">上传播放文件</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.uploadFix}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"act\">开始日期</Label>\r\n                                <Input type=\"text\" name=\"act\" id=\"act\" placeholder=\"开始时间，格式：2018-09-28\"\r\n                                       defaultValue={this.props.data.act} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"actend\">结束日期</Label>\r\n                                <Input type=\"text\" name=\"actend\" id=\"actend\" placeholder=\"结束时间，格式：2018-09-28\"\r\n                                       defaultValue={this.props.data.actend} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"cost\">播放时长</Label>\r\n                                <Input type=\"text\" name=\"cost\" id=\"cost\" placeholder=\"播放时长\"\r\n                                       defaultValue={this.props.data.cost} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"seq\">播放顺序</Label>\r\n                                <Input type=\"text\" name=\"seq\" id=\"seq\" placeholder=\"播放顺序\"\r\n                                       defaultValue={this.props.data.seq} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.action}>保存</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BaseComponent} from \"./BaseComponent\";\r\nimport {ajax, COLORS} from \"../util/Util\";\r\nimport {URLS} from \"../util/URLS\";\r\nimport $ from \"jquery\";\r\nimport {Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport {ModalComponent} from \"./ModalComponent\";\r\n\r\nexport class BreakTask extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: null\r\n        };\r\n    }\r\n\r\n    getList = () => {\r\n        ajax({\r\n            optionName: \"获取插播任务列表\",\r\n            url: URLS.TASK_LIST,\r\n            success: (data) => {\r\n                if ($.isArray(data)) {\r\n                    this.setSomeState({list: data});\r\n                } else {\r\n                    this.setSomeState({list: []});\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    init = () => {\r\n        this.getList();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table dark striped>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>名称</th>\r\n                        <th>播放类型</th>\r\n                        <th>播放日期</th>\r\n                        <th>播放时间点</th>\r\n                        <th>播放时长</th>\r\n                        <th>播放顺序</th>\r\n                        <th>\r\n                            <TaskModal data={{}} alert={this.alert} afterAction={this.getList}/>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        (() => {\r\n                            const getListFunc = this.getList;\r\n                            const alertFunc = this.alert;\r\n                            if ($.isArray(this.state.list)) {\r\n                                return this.state.list.map(function (item, idx) {\r\n                                    const typeName = {\r\n                                        url: \"网址\",\r\n                                        img: \"图片\",\r\n                                        video: \"视频\"\r\n                                    };\r\n                                    return (\r\n                                        <tr key={item.id}>\r\n                                            <th scope=\"row\">{item.id}</th>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{typeName[item.type]}</td>\r\n                                            <td>{item.act}</td>\r\n                                            <td>{item.start}</td>\r\n                                            <td>{item.cost}</td>\r\n                                            <td>{item.seq}</td>\r\n                                            <td>\r\n                                                <TaskModal data={item} alert={alertFunc} afterAction={getListFunc}/>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                });\r\n                            }\r\n                        })()\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass TaskModal extends ModalComponent {\r\n    action = () => {\r\n        const taskId = this.props.data.id;\r\n        let task = {\r\n            name: null,\r\n            type: null,\r\n            target: null,\r\n            act: null,\r\n            start: null,\r\n            cost: null,\r\n            seq: null\r\n        };\r\n        for(let o in task) {\r\n            if (task.hasOwnProperty(o)) {\r\n                task[o] = $(\"#taskForm\" + taskId + \" [name='\" + o + \"']\").val();\r\n            }\r\n        }\r\n        $.extend(task, {\r\n            id: taskId || null,\r\n            groups: \"BREAK\"\r\n        });\r\n        ajax({\r\n            optionName: \"保存插播任务\",\r\n            url: URLS.TASK_SAVE,\r\n            data: task,\r\n            success: (ret) => {\r\n                if (ret == 1) {\r\n                    this.alert(COLORS.success, \"保存成功\");\r\n                    this.toggle();\r\n                    this.afterAction();\r\n                } else {\r\n                    this.alert(COLORS.danger, \"保存失败\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    uploadBreak = () => {\r\n        const taskId = this.props.data.id;\r\n        const file = $(\"#taskForm\" + taskId + \" input[type='file']\");\r\n        if (file.val() && file.val() != \"\") {\r\n            const formData = new FormData();\r\n            formData.append('file', file[0].files[0]);\r\n            ajax({\r\n                optionName: \"上传播放文件\",\r\n                url: URLS.TASK_UPLOAD,\r\n                cache: false,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                dataType: \"text\",\r\n                success: (data) => {\r\n                    $(\"#taskForm\" + taskId + \" input[name='target']\").val(data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const getBtn = () => {\r\n            if (this.props.data.id) {\r\n                return <Button color={COLORS.info} size=\"sm\" onClick={this.toggle}>编辑</Button>;\r\n            } else {\r\n                return <Button color={COLORS.primary} size=\"sm\" onClick={this.toggle}>新增</Button>;\r\n            }\r\n        };\r\n        return (\r\n            <div>\r\n                {getBtn()}\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>插播任务</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form id={\"taskForm\" + this.props.data.id}>\r\n                            <FormGroup>\r\n                                <Label for=\"name\">任务名称</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"任务名称\"\r\n                                       defaultValue={this.props.data.name} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"type\">播放类型</Label>\r\n                                <Input type=\"select\" name=\"type\" id=\"type\" placeholder=\"播放类型\"\r\n                                       defaultValue={this.props.data.type} onChange={() => {\r\n                                }}>\r\n                                    <option value=\"url\">网址</option>\r\n                                    <option value=\"img\">图片</option>\r\n                                    <option value=\"video\">视频</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"target\">播放目标</Label>\r\n                                <Input type=\"text\" name=\"target\" id=\"target\" placeholder=\"播放目标\"\r\n                                       defaultValue={this.props.data.target} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"file\">上传播放文件</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\" onChange={this.uploadBreak}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"act\">播放日期</Label>\r\n                                <Input type=\"text\" name=\"act\" id=\"act\" placeholder=\"播放日起，格式：2018-09-28\"\r\n                                       defaultValue={this.props.data.act} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"start\">播放时间点</Label>\r\n                                <Input type=\"text\" name=\"start\" id=\"start\" placeholder=\"播放时间点，如上午9点52分1秒，格式：09:52:01\"\r\n                                       defaultValue={this.props.data.start} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"cost\">播放时长</Label>\r\n                                <Input type=\"text\" name=\"cost\" id=\"cost\" placeholder=\"播放时长\"\r\n                                       defaultValue={this.props.data.cost} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"seq\">播放顺序</Label>\r\n                                <Input type=\"text\" name=\"seq\" id=\"seq\" placeholder=\"播放顺序\"\r\n                                       defaultValue={this.props.data.seq} onChange={() => {\r\n                                }}/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.action}>保存</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BaseComponent} from \"./BaseComponent\";\r\nimport {ajax, COLORS, submitForm} from \"../util/Util\";\r\nimport {URLS} from \"../util/URLS\";\r\nimport $ from \"jquery\";\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem, Button,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Modal,\r\n    ModalBody, ModalFooter,\r\n    ModalHeader,\r\n    Table\r\n} from \"reactstrap\";\r\nimport {ModalComponent} from \"./ModalComponent\";\r\n\r\nexport class FileSystem extends BaseComponent {\r\n    root = {\r\n        name: \"我的电脑\",\r\n        path: \"\"\r\n    };\r\n    fileInfo = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            breadcrumb: [this.root],\r\n            list: null\r\n        };\r\n    }\r\n\r\n    getList = () => {\r\n        const fileInfo = this.fileInfo || this.root;\r\n        const breadcrumb = this.fileInfo ? [].concat(this.root, this.fileInfo.parents ? this.fileInfo.parents : [], this.fileInfo) : [this.root];\r\n        ajax({\r\n            optionName: \"获取文件系统\",\r\n            url: URLS.FILE_SYSTEM,\r\n            data: {\r\n                path: fileInfo.path\r\n            },\r\n            success: (data) => {\r\n                if ($.isArray(data)) {\r\n                    data = data.sort((a, b) => {\r\n                        if (a.directory && a.name == \"screen_trash\") {\r\n                            return 0;\r\n                        }\r\n                        if (b.directory && b.name == \"screen_trash\") {\r\n                            return 1;\r\n                        }\r\n                        if (a.directory) {\r\n                            return 0;\r\n                        } else if (!b.directory) {\r\n                            return 0;\r\n                        } else if (b.directory) {\r\n                            return 1;\r\n                        }\r\n                    });\r\n                    this.setSomeState({\r\n                        breadcrumb: breadcrumb,\r\n                        list: data\r\n                    });\r\n                } else {\r\n                    this.setSomeState({\r\n                        breadcrumb: breadcrumb,\r\n                        list: []\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    init = () => {\r\n        this.getList();\r\n    };\r\n\r\n    setFileInfo = (fileInfo) => {\r\n        if (fileInfo && fileInfo.path == \"\") {\r\n            this.fileInfo = null;\r\n        } else {\r\n            if (fileInfo.parent && !fileInfo.parents) {\r\n                fileInfo.parents = [].concat(this.fileInfo.parents);\r\n                fileInfo.parents.pop();\r\n            }\r\n            this.fileInfo = fileInfo;\r\n        }\r\n        this.getList();\r\n    };\r\n\r\n    doDownLoad = (fileInfo) => {\r\n        submitForm(URLS.FILE_SYSTEM_DOWNLOAD, \"post\", {path: fileInfo.path});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    {\r\n                        (() => {\r\n                            const setFileInfoFunc = this.setFileInfo;\r\n                            return this.state.breadcrumb.map((item, idx) => {\r\n                                if (idx != this.state.breadcrumb.length - 1) {\r\n                                    return (\r\n                                        <BreadcrumbItem key={\"breadcrumb\" + idx}>\r\n                                            <a href=\"#\" onClick={() => {\r\n                                                setFileInfoFunc(item)\r\n                                            }}>{item.name == \"screen_trash\" ? \"回收站\" : item.name}</a>\r\n                                        </BreadcrumbItem>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <BreadcrumbItem active key={\"breadcrumb\" + idx}>\r\n                                            {item.name == \"screen_trash\" ? \"回收站\" : item.name}\r\n                                        </BreadcrumbItem>\r\n                                    );\r\n                                }\r\n                            });\r\n                        })()\r\n                    }\r\n                </Breadcrumb>\r\n                {\r\n                    (() => {\r\n                        if (this.fileInfo) {\r\n                            return (\r\n                                <div>\r\n                                    <a className=\"btn btn-small\" href=\"#\" title=\"刷新\" onClick={this.getList}><i\r\n                                        className=\"icon-repeat\"></i></a>\r\n                                    {\r\n                                        (() => {\r\n                                            if (this.fileInfo.name != \"screen_trash\") {\r\n                                                if (this.fileInfo.parents && !this.fileInfo.parents.some(fInfo => fInfo.name == \"screen_trash\") || !this.fileInfo.parents) {\r\n                                                    return (\r\n                                                        <span>\r\n                                                            <CreateModal alert={this.alert} afterAction={this.getList}\r\n                                                                         path={this.fileInfo.path}/>\r\n                                                            <UploadModal alert={this.alert} afterAction={this.getList}\r\n                                                                         path={this.fileInfo.path}/>\r\n                                                        </span>\r\n                                                    );\r\n                                                }\r\n                                            }\r\n                                        })()\r\n                                    }\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })()\r\n                }\r\n                <Table dark striped>\r\n                    <tbody>\r\n                    {\r\n                        (() => {\r\n                            const alertFunc = this.alert;\r\n                            const getListFunc = this.getList;\r\n                            const setFileInfoFunc = this.setFileInfo;\r\n                            const downloadFunc = this.doDownLoad;\r\n                            const fi = this.fileInfo;\r\n                            if ($.isArray(this.state.list)) {\r\n                                return this.state.list.map(function (item, idx) {\r\n                                    return (\r\n                                        <tr key={\"item\" + idx}>\r\n                                            <th scope=\"row\">\r\n                                                {\r\n                                                    (() => {\r\n                                                        if (item.directory) {\r\n                                                            if (item.name == \"screen_trash\") {\r\n                                                                return (\r\n                                                                    <span style={{cursor: \"pointer\"}} onClick={() => {\r\n                                                                        setFileInfoFunc(item);\r\n                                                                    }}>\r\n                                                                    <i className=\"icon-trash\"></i>\r\n                                                                        {\"    \"}回收站\r\n                                                                </span>\r\n                                                                );\r\n                                                            }\r\n                                                            return (\r\n                                                                <span style={{cursor: \"pointer\"}} onClick={() => {\r\n                                                                    setFileInfoFunc(item);\r\n                                                                }}>\r\n                                                                    <i className=\"icon-folder-close-alt\"></i>\r\n                                                                    {\"    \"}{item.name}\r\n                                                                </span>\r\n                                                            );\r\n                                                        } else {\r\n                                                            return (\r\n                                                                <span style={{\r\n                                                                    cursor: \"pointer\",\r\n                                                                    color: \"#DFF1FD\",\r\n                                                                    fontWeight: \"normal\"\r\n                                                                }} onClick={() => {\r\n                                                                    downloadFunc(item)\r\n                                                                }}>\r\n                                                                    <i className=\"icon-file-alt\"></i>\r\n                                                                    {\"    \"}{item.name}\r\n                                                                </span>\r\n                                                            );\r\n                                                        }\r\n                                                    })()\r\n                                                }\r\n                                            </th>\r\n                                            <td>{item.file ? item.length : \"\"}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    (() => {\r\n                                                        if (fi) {\r\n                                                            if (fi.name == \"screen_trash\") {\r\n                                                                return (\r\n                                                                    <RecoveryModal alert={alertFunc}\r\n                                                                                   afterAction={getListFunc}\r\n                                                                                   path={item.path}\r\n                                                                                   parent={fi.parent}/>\r\n                                                                );\r\n                                                            }\r\n                                                            if (item.name != \"screen_trash\") {\r\n                                                                if (item.parents && !item.parents.some(fInfo => fInfo.name == \"screen_trash\") || !item.parents) {\r\n                                                                    return (\r\n                                                                        <div>\r\n                                                                            <RenameModal alert={alertFunc}\r\n                                                                                         afterAction={getListFunc}\r\n                                                                                         path={item.path}/>\r\n                                                                            <DeleteModal alert={alertFunc}\r\n                                                                                         afterAction={getListFunc}\r\n                                                                                         path={item.path}/>\r\n                                                                        </div>\r\n                                                                    );\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    })()\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                });\r\n                            }\r\n                        })()\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CreateModal extends ModalComponent {\r\n    action = () => {\r\n        const nm = $(\"#createForm input[name='name']\").val();\r\n        if (nm && nm != \"\" || nm == 0) {\r\n            ajax({\r\n                optionName: \"创建文件夹\",\r\n                url: URLS.FILE_SYSTEM_CREATE,\r\n                data: {\r\n                    path: this.props.path,\r\n                    name: nm\r\n                },\r\n                success: (data) => {\r\n                    if (data == 1) {\r\n                        this.afterAction();\r\n                        this.toggle();\r\n                    } else {\r\n                        this.alert(COLORS.danger, \"创建文件夹失败\");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <a className=\"btn btn-small\" href=\"#\" title=\"创建文件夹\" onClick={this.toggle}><i\r\n                    className=\"icon-folder-close-alt\"></i></a>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>创建文件夹</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form id=\"createForm\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">文件夹名称</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" defaultValue=\"新建文件夹\"/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.action}>创建</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nclass UploadModal extends ModalComponent {\r\n    action = () => {\r\n        const file = $(\"#fileUploadForm input[type='file']\");\r\n        if (file.val() && file.val() != \"\") {\r\n            const formData = new FormData();\r\n            formData.append('path', this.props.path);\r\n            formData.append('file', file[0].files[0]);\r\n            ajax({\r\n                optionName: \"上传文件\",\r\n                url: URLS.FILE_SYSTEM_UPLOAD,\r\n                cache: false,\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                dataType: \"json\",\r\n                success: (data) => {\r\n                    if (data == 1) {\r\n                        this.afterAction();\r\n                        this.toggle();\r\n                    } else {\r\n                        this.alert(COLORS.danger, \"上传失败\");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <a className=\"btn btn-small\" href=\"#\" title=\"上传文件\" onClick={this.toggle}><i\r\n                    className=\"icon-cloud-upload\"></i></a>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>上传文件</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form id=\"fileUploadForm\">\r\n                            <FormGroup>\r\n                                <Label for=\"file\">目标：{this.props.path}</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"file\"/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.action}>上传</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nclass RenameModal extends ModalComponent {\r\n    action = () => {\r\n        const nm = $(\"#renameForm input[name='name']\").val();\r\n        if (nm && nm != \"\" || nm == 0) {\r\n            ajax({\r\n                optionName: \"重命名\",\r\n                url: URLS.FILE_SYSTEM_RENAME,\r\n                data: {\r\n                    path: this.props.path,\r\n                    name: nm\r\n                },\r\n                success: (data) => {\r\n                    if (data == 1) {\r\n                        this.afterAction();\r\n                        this.toggle();\r\n                    } else {\r\n                        this.alert(COLORS.danger, \"重命名失败\");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <a className=\"btn btn-small\" href=\"#\" title=\"重命名\" onClick={this.toggle}><i className=\"icon-edit\"></i></a>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>重命名</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form id=\"renameForm\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">目标：{this.props.path}</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\"\r\n                                       defaultValue={this.props.path.split(\"/\").pop()}/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.action}>重命名</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nclass DeleteModal extends ModalComponent {\r\n    action = () => {\r\n        ajax({\r\n            optionName: \"删除\",\r\n            url: URLS.FILE_SYSTEM_DELETE,\r\n            data: {\r\n                path: this.props.path\r\n            },\r\n            success: (data) => {\r\n                if (data == 1) {\r\n                    this.afterAction();\r\n                    this.toggle();\r\n                } else {\r\n                    this.alert(COLORS.danger, \"删除失败\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <a className=\"btn btn-small\" href=\"#\" title=\"删除\" onClick={this.toggle}><i\r\n                    className=\"icon-trash\"></i></a>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>删除</ModalHeader>\r\n                    <ModalBody>\r\n                        确定删除目标：{this.props.path}吗?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.action}>确定</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nclass RecoveryModal extends ModalComponent {\r\n    action = () => {\r\n        ajax({\r\n            optionName: \"还原\",\r\n            url: URLS.FILE_SYSTEM_RECOVERY,\r\n            data: {\r\n                path: this.props.path\r\n            },\r\n            success: (data) => {\r\n                if (data == 1) {\r\n                    this.afterAction();\r\n                    this.toggle();\r\n                } else {\r\n                    this.alert(COLORS.danger, \"还原失败\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <a className=\"btn btn-small\" href=\"#\" title=\"还原\" onClick={this.toggle}><i\r\n                    className=\"icon-reply\"></i></a>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>还原</ModalHeader>\r\n                    <ModalBody>\r\n                        确定还原到：{this.props.parent}吗?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.action}>确定</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BaseComponent} from \"./BaseComponent\";\r\nimport {Button, Col, Container, Input, Row, Table} from \"reactstrap\";\r\nimport {ajax, COLORS} from \"../util/Util\";\r\nimport $ from \"jquery\";\r\nimport {URLS} from \"../util/URLS\";\r\n\r\nexport class Sql extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: null\r\n        };\r\n    }\r\n\r\n    run = (sqlIdx) => {\r\n        const sql = [\r\n            \"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' ORDER BY name\",\r\n            \"PRAGMA table_info (TABLE_NAME_HERE)\"\r\n        ];\r\n        if (sql[sqlIdx]) {\r\n            $(\"#sql\").val(sql[sqlIdx]);\r\n        } else {\r\n            ajax({\r\n                optionName: \"执行SQL\",\r\n                url: URLS.SQL_RUN,\r\n                data: {\r\n                    sql: $(\"#sql\").val()\r\n                },\r\n                success: (result) => {\r\n                    this.alert(COLORS.success, \"执行完成\");\r\n                    if (result) {\r\n                        this.setSomeState({list: result})\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{marginTop: \"10px\"}}>\r\n                <Row>\r\n                    <Col style={{textAlign: \"center\"}}>\r\n                        <Input type=\"text\" id=\"sql\" placeholder=\"请输入SQL语句\"/>\r\n                        <Button color={COLORS.secondary} size=\"sm\" onClick={() => this.run(0)}>列出表</Button>{'  '}\r\n                        <Button color={COLORS.warning} size=\"sm\" onClick={() => this.run(1)}>表结构</Button>{'  '}\r\n                        <Button color={COLORS.primary} size=\"sm\" onClick={() => this.run()}>执行SQL</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col id=\"sqlResult\">\r\n                        {\r\n                            (() => {\r\n                                if ($.isArray(this.state.list) && this.state.list.length>0) {\r\n                                    const list = this.state.list;\r\n                                    const obj = list[0];\r\n                                    const dt = new Date().getTime();\r\n                                    return (\r\n                                        <Table dark striped key={\"table\" + dt}>\r\n                                            <thead>\r\n                                            <tr>\r\n                                                {\r\n                                                    (() => {\r\n                                                        const th = [];\r\n                                                        $.each(obj, (o) => {\r\n                                                            if (obj.hasOwnProperty(o)) {\r\n                                                                th.push(<th>{o.toUpperCase()}</th>);\r\n                                                            }\r\n                                                        });\r\n                                                        return th;\r\n                                                    })()\r\n                                                }\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {\r\n                                                (() => {\r\n                                                    return list.map((item, idx) => {\r\n                                                        return (\r\n                                                            <tr key={\"tr\" + idx + dt}>\r\n                                                                {\r\n                                                                    (() => {\r\n                                                                        const td = [];\r\n                                                                        $.each(obj, (o) => {\r\n                                                                            if (obj.hasOwnProperty(o)) {\r\n                                                                                td.push(<td>{item[o]}</td>);\r\n                                                                            }\r\n                                                                        });\r\n                                                                        return td;\r\n                                                                    })()\r\n                                                                }\r\n                                                            </tr>\r\n                                                        );\r\n                                                    });\r\n                                                })()\r\n                                            }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    );\r\n                                }\r\n                            })()\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Nav, NavItem, NavLink, TabContent, TabPane} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\nimport {BaseComponent} from \"../component/BaseComponent\";\r\nimport {Config} from \"../component/Config\";\r\nimport {Command} from \"../component/Command\";\r\nimport {FixTask} from \"../component/FixTask\";\r\nimport {BreakTask} from \"../component/BreakTask\";\r\nimport {FileSystem} from \"../component/FileSystem\";\r\nimport {Sql} from \"../component/Sql\";\r\n\r\nexport class Main extends BaseComponent {\r\n    sub = {\r\n        config: null,\r\n        fixTask: null,\r\n        breakTask: null,\r\n        fixVideo: null,\r\n        sql: null,\r\n        cmd: null\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: '1'\r\n        };\r\n        this.setSelf(this.subFix.main, this);\r\n    }\r\n\r\n    setSub = (key, subObj) => {\r\n        this.sub[key] = subObj;\r\n    };\r\n\r\n    toggle = (tab) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav tabs>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '1' })}\r\n                            onClick={() => { this.toggle('1'); }}\r\n                        >\r\n                            系统配置\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '2' })}\r\n                            onClick={() => { this.toggle('2'); }}\r\n                        >\r\n                            固播任务\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '3' })}\r\n                            onClick={() => { this.toggle('3'); }}\r\n                        >\r\n                            插播任务\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '4' })}\r\n                            onClick={() => { this.toggle('4'); }}\r\n                        >\r\n                            文件系统\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '5' })}\r\n                            onClick={() => { this.toggle('5'); }}\r\n                        >\r\n                            SQL\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '6' })}\r\n                            onClick={() => { this.toggle('6'); }}\r\n                        >\r\n                            命令行\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"1\" className=\"Main-tab-pane\">\r\n                        {\r\n                            (() =>{\r\n                                if (this.state.activeTab == 1) {\r\n                                    return <Config alert={this.alert}/>;\r\n                                }\r\n                            })()\r\n                        }\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\" className=\"Main-tab-pane\">\r\n                        {\r\n                            (() =>{\r\n                                if (this.state.activeTab == 2) {\r\n                                    return <FixTask alert={this.alert}/>;\r\n                                }\r\n                            })()\r\n                        }\r\n                    </TabPane>\r\n                    <TabPane tabId=\"3\" className=\"Main-tab-pane\">\r\n                        {\r\n                            (() =>{\r\n                                if (this.state.activeTab == 3) {\r\n                                    return <BreakTask alert={this.alert}/>;\r\n                                }\r\n                            })()\r\n                        }\r\n                    </TabPane>\r\n                    <TabPane tabId=\"4\" className=\"Main-tab-pane\">\r\n                        {\r\n                            (() =>{\r\n                                if (this.state.activeTab == 4) {\r\n                                    return <FileSystem alert={this.alert}/>;\r\n                                }\r\n                            })()\r\n                        }\r\n                    </TabPane>\r\n                    <TabPane tabId=\"5\" className=\"Main-tab-pane\">\r\n                        {\r\n                            (() =>{\r\n                                if (this.state.activeTab == 5) {\r\n                                    return <Sql alert={this.alert}/>;\r\n                                }\r\n                            })()\r\n                        }\r\n                    </TabPane>\r\n                    <TabPane tabId=\"6\" className=\"Main-tab-pane\">\r\n                        {\r\n                            (() =>{\r\n                                if (this.state.activeTab == 6) {\r\n                                    return <Command alert={this.alert}/>;\r\n                                }\r\n                            })()\r\n                        }\r\n                    </TabPane>\r\n                </TabContent>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BaseComponent} from \"../component/BaseComponent\";\r\nimport {Alert, Button, Form, FormGroup, Input, Label} from \"reactstrap\";\r\nimport {ajax, COLORS} from \"../util/Util\";\r\nimport $ from \"jquery\";\r\nimport {URLS} from \"../util/URLS\";\r\n\r\nexport class Login extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: null,\r\n            color: null\r\n        };\r\n        this.setSelf(this.subFix.login, this);\r\n    }\r\n\r\n    alert = (color, msg) => {\r\n        if (!$.inArray(color, COLORS.all)) {\r\n            color = COLORS.info;\r\n        }\r\n        this.setSomeState({\r\n            msg: msg,\r\n            color: color\r\n        });\r\n        window.setTimeout(() => this.setSomeState({\r\n            msg: null,\r\n            color: COLORS.light\r\n        }), 2000);\r\n    };\r\n\r\n    login = () => {\r\n        ajax({\r\n            optionName: \"登录\",\r\n            url: URLS.LOGIN,\r\n            data: {\r\n                userid: $(\"#userid\").val(),\r\n                pass: $(\"#pass\").val()\r\n            },\r\n            success: (data) => {\r\n                if (data.status == 1) {\r\n                    this.props.login(data.user);\r\n                } else {\r\n                    this.alert(COLORS.danger, \"登录失败\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Header\">\r\n                    <div className=\"Header-left\">\r\n                    </div>\r\n                    <div className=\"Header-center\">\r\n                        {\r\n                            (() => {\r\n                                if (this.state.msg && this.state.msg != \"\") {\r\n                                    return (\r\n                                        <Alert color={this.state.color || \"success\"} size=\"sm\">\r\n                                            {this.state.msg}\r\n                                        </Alert>\r\n                                    );\r\n                                }\r\n                            })()\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div style={{width: \"50%\", marginTop: \"10%\", marginLeft: \"25%\", textAlign: \"center\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"userid\" hidden>用户名</Label>\r\n                            <Input type=\"text\" name=\"userid\" id=\"userid\" placeholder=\"用户名\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"pass\" hidden>密码</Label>\r\n                            <Input type=\"password\" name=\"pass\" id=\"pass\" placeholder=\"密码\"/>\r\n                        </FormGroup>\r\n                        <Button color={COLORS.primary} onClick={this.login}>登录</Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './font-awesome/css/font-awesome.min.css';\nimport {Header} from \"./layout/Header\";\nimport {Footer} from \"./layout/Footer\";\nimport {Main} from \"./layout/Main\";\nimport {ajax, COLORS} from \"./util/Util\";\nimport $ from \"jquery\";\nimport {Login} from \"./layout/Login\";\nimport {URLS} from \"./util/URLS\";\n\nclass App extends React.Component {\n    sub = {\n        header: null\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: false\n        };\n    }\n\n    setSub = (key, subObj) => {\n        this.sub[key] = subObj;\n    };\n\n    alert = (color, msg) => {\n        if (this.sub.header && this.sub.header.alert) {\n            this.sub.header.alert(color, msg);\n        }\n    };\n\n    login = (user) => {\n        this.setState({\n            login: true\n        });\n        if (this.sub.header && this.sub.header.setSomeState) {\n            this.sub.header.setSomeState({\n                login: true,\n                user: user\n            });\n        }\n        this.alert(COLORS.info, \"欢迎，\" + user);\n    };\n\n    logout = () => {\n        this.setState({\n            login: false\n        });\n    };\n\n    initAjaxErrorHandler = () => {\n        $(document).ajaxError((event, xhr, opt, err) => {\n            let str = \"\";\n            if (opt && opt.optionName) {\n                str = opt.optionName + \"：\";\n            }\n            this.alert(COLORS.danger, str + \"请求出现错误，可能登录超时\");\n        });\n    };\n\n    init = () => {\n        ajax({\n            optionName: \"获取服务状态\",\n            url: URLS.LOGOUT,\n            success: (data) => {\n                this.initAjaxErrorHandler();\n            },\n            error: () => {\n                URLS.try();\n                ajax({\n                    optionName: \"获取服务状态\",\n                    url: URLS.LOGOUT,\n                    success: (data) => {\n                        this.initAjaxErrorHandler();\n                    },\n                    error: () => {\n                        URLS.retry();\n                        this.initAjaxErrorHandler();\n                    }\n                });\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-main\">\n                    {\n                        (() => {\n                            if (this.state.login) {\n                                return (\n                                    <div>\n                                        <Header logout={this.logout} setSelf={this.setSub}/>\n                                        <Main alert={this.alert}/>\n                                    </div>\n                                );\n                            } else {\n                                return <Login alert={this.alert} login={this.login}/>;\n                            }\n                        })()\n                    }\n                </div>\n                <div className=\"App-footer\">\n                    <Footer alert={this.alert}/>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}